// Mocks generated by Mockito 5.3.2 from annotations
// in core/test/presentation/provider/tvseries/tvseries_detail_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:core/core.dart' as _i6;
import 'package:core/domain/entities/tvseries.dart' as _i9;
import 'package:core/domain/entities/tvseries_detail.dart' as _i7;
import 'package:core/domain/repositories/tvseries_repository.dart' as _i2;
import 'package:core/domain/usecases/tvseries/get_tvseries_detail.dart' as _i4;
import 'package:core/domain/usecases/tvseries/get_tvseries_recommendations.dart'
    as _i8;
import 'package:core/domain/usecases/tvseries/get_warchlist_status_tvseries.dart'
    as _i10;
import 'package:core/domain/usecases/tvseries/remove_watchlist_tvseries.dart'
    as _i12;
import 'package:core/domain/usecases/tvseries/save_watchlist_tvseries.dart'
    as _i11;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTvseriesRepository_0 extends _i1.SmartFake
    implements _i2.TvseriesRepository {
  _FakeTvseriesRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetTvseriesDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvseriesDetail extends _i1.Mock implements _i4.GetTvseriesDetail {
  MockGetTvseriesDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvseriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvseriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvseriesRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.TvseriesDetail>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i7.TvseriesDetail>>.value(
                _FakeEither_1<_i6.Failure, _i7.TvseriesDetail>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.TvseriesDetail>>);
}

/// A class which mocks [GetTvseriesRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvseriesRecommendations extends _i1.Mock
    implements _i8.GetTvseriesRecommendations {
  MockGetTvseriesRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvseriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvseriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvseriesRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i9.TvSeries>>> execute(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i9.TvSeries>>>.value(
                _FakeEither_1<_i6.Failure, List<_i9.TvSeries>>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i9.TvSeries>>>);
}

/// A class which mocks [GetWatchListStatusTvseries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatusTvseries extends _i1.Mock
    implements _i10.GetWatchListStatusTvseries {
  MockGetWatchListStatusTvseries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvseriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvseriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvseriesRepository);
  @override
  _i5.Future<bool> execute(int? id) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [SaveWatchlistTvseries].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistTvseries extends _i1.Mock
    implements _i11.SaveWatchlistTvseries {
  MockSaveWatchlistTvseries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvseriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvseriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvseriesRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          _i7.TvseriesDetail? tvseries) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tvseries],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
            _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tvseries],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistTvseries].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistTvseries extends _i1.Mock
    implements _i12.RemoveWatchlistTvseries {
  MockRemoveWatchlistTvseries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvseriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvseriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvseriesRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          _i7.TvseriesDetail? tvseriesDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tvseriesDetail],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
            _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tvseriesDetail],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, String>>);
}
